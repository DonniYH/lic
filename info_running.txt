"""
    LIC - Instruction Book Creation software
    Copyright (C) 2010 Remi Gagne
    Copyright (C) 2015 Jeremy Czajkowski

    This file (info_running.txt) is part of LIC.

    lic is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

    You should have received a copy of the Creative Commons License
    along with this program.  If not, see http://creativecommons.org/licenses/by-sa/3.0/
"""

** Requirements for running LIC from source: **

- Python, any version *before* 3.0

- Qt version 4.6.3 or greater.  There's a bug in Qt 4.6.2 and earlier that make LIC *not* work:
http://bugreports.qt.nokia.com/browse/QTBUG-7880

- PyQt, any version that works with the above Python & Qt.

- PyOpenGL, any version

- PyOpenGL-accelerate, any version 

- Python Image Libary (PIL), any version

- Pillow, any version

The source includes a PyDev .project file, if you have Eclipse & PyDev handy.

** Source tree overview **

Lic.py  Contains the main entry point and window application code.

LicInstructions.py  Contains the main Instructions class, which maintains the
	state of a single instruction book.

LicCustomPages.py  Contains the important Page class, plus TitlePage and
	PartListPage subclasses.

LicModel.py  Contains the other basic classes you'd expect, which each represent
	one 'thing' within in an instruction book (Step, CSI, PLI, etc).

LicBinaryReader & Writer  Contain all of the binary load / save stuff.

LicGraphicsWidget.py  Contains the important QGraphicScene subclass, which is
	responsible for the physical display of an instruction book on a portion of the
	application window.

LicTreeModel.py  Contains the QAbstractItemModel subclass which tracks the data
	model for the navigation tree.  The tree widget itself is trivial, and lives 
	in Lic.py

LicUndoActions.py  Holds - you guessed it - all of the code for each custom
	undo / redo action.

LicDialogs.py  Contains every single dialog subclass used by Lic.  I like all that
	nasty UI widget code in one spot.

LicAssistantWidget.py  Each individual class fully support one job, assigned to it

LicTemplate.py Special instances of a class that implement TemplateLineItem, 
	TemplateRotateScaleSignalItem and their ordinary counterpart inherit methods 
	and properties. They allow you to define a template that affects the size, 
	location, color, and other factors of all elements of instruction.
	
LicResources.py  Automatically generated from resources.qrc file with resources, 
	using __recompileResources /Lic.py/ method.
	
LicQtWrapper.py	 Wrapper of generic action for classes inheriting from QGraphicsItem

LicPovrayWrapper.py  Manage your startup and transfer|receiving data from Pov-Ray

LicL3PWrapper.py  Manage your startup and transfer|receiving data from L3P

LicGLHelpers & LicHelpers  Various helpful methods, simple objects and constants variable

LicGradientDialog.py  Holds all of the code to set background of submodel-preview,
 Parts List Image, Callout and other as choosen gradient.

LDrawColors.py  LDraw color definition and management.

GimpParser.py  Gimp file format Interpreter.


Remi
Jeremy
